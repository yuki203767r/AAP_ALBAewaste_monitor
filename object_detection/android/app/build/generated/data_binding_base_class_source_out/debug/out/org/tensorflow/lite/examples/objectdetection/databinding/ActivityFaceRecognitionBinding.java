// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.Override;
import org.tensorflow.lite.examples.objectdetection.R;

public final class ActivityFaceRecognitionBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Button buttonCapture;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ImageView imageView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Button notRegistered;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Button pickImage;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Button registered;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Button skip;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView tv;

  private ActivityFaceRecognitionBinding(@NonNull View rootView, @Nullable Button buttonCapture,
      @Nullable ImageView imageView, @Nullable Button notRegistered, @Nullable Button pickImage,
      @Nullable Button registered, @Nullable Button skip, @Nullable TextView tv) {
    this.rootView = rootView;
    this.buttonCapture = buttonCapture;
    this.imageView = imageView;
    this.notRegistered = notRegistered;
    this.pickImage = pickImage;
    this.registered = registered;
    this.skip = skip;
    this.tv = tv;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFaceRecognitionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFaceRecognitionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_face_recognition, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFaceRecognitionBinding bind(@NonNull View rootView) {
    Button buttonCapture = ViewBindings.findChildViewById(rootView, R.id.button_capture);

    ImageView imageView = ViewBindings.findChildViewById(rootView, R.id.imageView);

    Button notRegistered = ViewBindings.findChildViewById(rootView, R.id.notRegistered);

    Button pickImage = ViewBindings.findChildViewById(rootView, R.id.pickImage);

    Button registered = ViewBindings.findChildViewById(rootView, R.id.registered);

    Button skip = ViewBindings.findChildViewById(rootView, R.id.skip);

    TextView tv = ViewBindings.findChildViewById(rootView, R.id.tv);

    return new ActivityFaceRecognitionBinding(rootView, buttonCapture, imageView, notRegistered,
        pickImage, registered, skip, tv);
  }
}
